/* Global resets and CSS variables for theming */
:root {
  --control-gap: 8px;
  --fab-size: 48px;
  --control-margin: 16px;
}
:root[data-theme='light'] {
  --bg: #ffffff;
  --bg-elev: #f5f7fb;
  --text: #0f172a;
  --muted: #6b7280;
  --primary: #2563eb;
  --primary-contrast: #ffffff;
  --border: #e5e7eb;
  --shadow: 0 10px 25px rgba(2, 6, 23, 0.08);
}
:root[data-theme='dark'] {
  --bg: #0b1220;
  --bg-elev: #111827;
  --text: #e5e7eb;
  --muted: #9ca3af;
  --primary: #60a5fa;
  --primary-contrast: #111827;
  --border: #1f2937;
  --shadow: 0 10px 25px rgba(0, 0, 0, 0.6);
}

html, body, #root {
  height: 100%;
}
body {
  margin: 0;
  background: var(--bg);
  color: var(--text);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', Arial, sans-serif;
}

.app {
  height: 100vh;
  display: flex;
  flex-direction: column;
}

.map-wrap {
  position: relative;
  flex: 1 1 auto;
  min-height: 0; /* for flexbox + children */
}

#map {
  position: absolute;
  inset: 0;
}

/* Controls overlay like Google Maps */
.controls {
  position: absolute;
  top: 12px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  display: flex;
  align-items: center;
  gap: 8px;
  background: color-mix(in srgb, var(--bg), transparent 10%);
  backdrop-filter: saturate(160%) blur(8px);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 8px;
  box-shadow: var(--shadow);
}

.controls .field {
  display: flex;
  align-items: center;
  gap: 6px;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: 6px 8px;
}

.input {
  border: none;
  outline: none;
  background: transparent;
  color: var(--text);
  min-width: 160px;
}

.button {
  appearance: none;
  border: 1px solid var(--border);
  border-radius: 8px;
  padding: 8px 12px;
  background: var(--primary);
  color: var(--primary-contrast);
  font-weight: 600;
  cursor: pointer;
  transition: background-color .2s ease, color .2s ease, filter .15s ease, transform .06s ease, box-shadow .2s ease, border-color .2s ease;
}
.button.secondary {
  background: var(--bg-elev);
  color: var(--text);
}
.button:disabled {
  opacity: 0.6;
  cursor: default;
}

/* Bottom info bar (optional use) */
.info-bar {
  position: absolute;
  bottom: 12px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  background: color-mix(in srgb, var(--bg), transparent 10%);
  border: 1px solid var(--border);
  border-radius: 12px;
  padding: 8px 12px;
  box-shadow: var(--shadow);
  color: var(--muted);
}

/* Bottom-right vertical stack for controls */
.br-controls {
  position: absolute;
  right: 16px;
  bottom: 16px;
  z-index: 1100;
  display: flex;
  flex-direction: column;
  gap: var(--control-gap);
}
.fab-btn {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  border: 1px solid var(--border);
  background: var(--bg-elev);
  color: var(--text);
  display: grid;
  place-items: center;
  box-shadow: var(--shadow);
  cursor: pointer;
  transition: background-color .2s ease, color .2s ease, filter .15s ease, transform .06s ease, box-shadow .2s ease, border-color .2s ease;
}
.fab-btn i { font-size: 18px; }

/* Reposition and restyle OpenLayers zoom control to match FAB buttons */
.ol-zoom {
  right: 16px !important;
  bottom: calc(var(--control-margin) + (2 * var(--fab-size) + var(--control-gap)) + var(--control-gap)) !important; /* equal gap to br-controls */
  left: auto !important;
  top: auto !important;
  display: flex !important;
  flex-direction: column !important;
  gap: var(--control-gap) !important;
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
.ol-zoom button {
  width: 48px !important;
  height: 48px !important;
  border-radius: 50% !important;
  border: 1px solid var(--border) !important;
  background: var(--bg-elev) !important;
  color: var(--text) !important;
  display: grid !important;
  place-items: center !important;
  box-shadow: var(--shadow) !important;
  padding: 0 !important;
  line-height: 1 !important;
  font-size: 22px !important;
  transition: background-color .2s ease, color .2s ease, filter .15s ease, transform .06s ease, box-shadow .2s ease, border-color .2s ease !important;
}
.ol-zoom button:hover {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%) !important;
  outline-offset: 2px !important;
}
.ol-zoom button:focus { outline: none !important; }
.ol-zoom button:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%) !important;
  outline-offset: 2px !important;
}

/* Layer switcher control */
.layer-switch {
  display: flex;
  gap: 6px;
  align-items: center;
  background: var(--bg-elev);
  border: 1px solid var(--border);
  padding: 4px;
  border-radius: 10px;
}
.layer-switch .chip {
  appearance: none;
  border: 1px solid transparent;
  background: transparent;
  color: var(--text);
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 8px;
  border-radius: 8px;
  cursor: pointer;
  transition: background-color .2s ease, color .2s ease, filter .15s ease, transform .06s ease, border-color .2s ease, box-shadow .2s ease;
}
.layer-switch .chip i { font-size: 14px; }
.layer-switch .chip.active {
  background: var(--primary);
  color: var(--primary-contrast);
  border-color: var(--primary);
}

/* Responsive tweaks */
@media (max-width: 640px) {
  .controls {
    left: 8px;
    right: 8px;
    transform: none;
  }
  .input {
    min-width: 0;
    width: 40vw;
  }
}


/* Unified hover/active/focus styles across controls */
/* Add outline on hover to all buttons; no color/brightness change on hover */
.button:hover:not(:disabled),
.fab-btn:hover,
.layer-switch .chip:hover {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%);
  outline-offset: 2px;
}
.button:active:not(:disabled),
.fab-btn:active,
.layer-switch .chip:active {
  transform: translateY(1px);
}
.button:focus-visible,
.fab-btn:focus-visible,
.layer-switch .chip:focus-visible {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%);
  outline-offset: 2px;
}
/* Ensure active chips don't change on hover */
.layer-switch .chip.active:hover {
  outline: 2px solid color-mix(in srgb, var(--primary), transparent 60%);
  outline-offset: 2px;
}
/* Make zoom buttons active state consistent */
.ol-zoom button:active {
  transform: translateY(1px) !important;
}
